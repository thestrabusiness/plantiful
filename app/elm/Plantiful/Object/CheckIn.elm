-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Plantiful.Object.CheckIn exposing (fertilized, id, notes, performedBy, plant, watered)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import Plantiful.InputObject
import Plantiful.Interface
import Plantiful.Object
import Plantiful.Scalar
import Plantiful.ScalarCodecs
import Plantiful.Union


fertilized : SelectionSet Bool Plantiful.Object.CheckIn
fertilized =
    Object.selectionForField "Bool" "fertilized" [] Decode.bool


id : SelectionSet Plantiful.ScalarCodecs.Id Plantiful.Object.CheckIn
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Plantiful.ScalarCodecs.codecs |> Plantiful.Scalar.unwrapCodecs |> .codecId |> .decoder)


notes : SelectionSet (Maybe String) Plantiful.Object.CheckIn
notes =
    Object.selectionForField "(Maybe String)" "notes" [] (Decode.string |> Decode.nullable)


performedBy :
    SelectionSet decodesTo Plantiful.Object.User
    -> SelectionSet decodesTo Plantiful.Object.CheckIn
performedBy object_ =
    Object.selectionForCompositeField "performedBy" [] object_ identity


plant :
    SelectionSet decodesTo Plantiful.Object.Plant
    -> SelectionSet decodesTo Plantiful.Object.CheckIn
plant object_ =
    Object.selectionForCompositeField "plant" [] object_ identity


watered : SelectionSet Bool Plantiful.Object.CheckIn
watered =
    Object.selectionForField "Bool" "watered" [] Decode.bool
